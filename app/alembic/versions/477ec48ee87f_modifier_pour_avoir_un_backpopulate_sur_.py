"""modifier pour avoir un backpopulate sur autre tables

Revision ID: 477ec48ee87f
Revises: e4164964921b
Create Date: 2024-12-26 14:58:09.148382

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '477ec48ee87f'
down_revision: Union[str, None] = 'e4164964921b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('abonne', sa.Column('centre_id', sa.Integer(), nullable=True))
    op.drop_constraint('abonne_centre_fkey', 'abonne', type_='foreignkey')
    op.create_foreign_key(None, 'abonne', 'centre', ['centre_id'], ['id'])
    op.drop_column('abonne', 'centre')
    op.add_column('usager', sa.Column('centre_id', sa.Integer(), nullable=True))
    op.drop_constraint('usager_centre_fkey', 'usager', type_='foreignkey')
    op.create_foreign_key(None, 'usager', 'centre', ['centre_id'], ['id'])
    op.drop_column('usager', 'centre')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('usager', sa.Column('centre', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'usager', type_='foreignkey')
    op.create_foreign_key('usager_centre_fkey', 'usager', 'centre', ['centre'], ['id'])
    op.drop_column('usager', 'centre_id')
    op.add_column('abonne', sa.Column('centre', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'abonne', type_='foreignkey')
    op.create_foreign_key('abonne_centre_fkey', 'abonne', 'centre', ['centre'], ['id'])
    op.drop_column('abonne', 'centre_id')
    # ### end Alembic commands ###
